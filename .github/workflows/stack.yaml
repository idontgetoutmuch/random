name: random-CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ master ]
jobs:
  build:
    name: CI
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        resolver: [nightly, lts-16, lts-14, lts-12]
        # include:
        #     # ghc-7.10.3
        #   - resolver: lts-6
        #     stack-yaml: stack-really-old.yaml
        #     # ghc-8.0.2
        #   - resolver: lts-9
        #     stack-yaml: stack-really-old.yaml
        #     # ghc-8.2.2
        #   - resolver: lts-11
        #     stack-yaml: stack-old.yaml
        #     # ghc-8.4.4
        #   - resolver: lts-12
        #     stack-yaml: stack-old.yaml
        #     # ghc-8.6.5
        #   - resolver: lts-14
        #     stack-yaml: stack-coveralls.yaml
        #     # ghc-8.8.4
        #   - resolver: lts-16
        #     stack-yaml: stack.yaml
        # Bugs in GHC make it crash too often to be worth running
        exclude:
          - os: windows-latest
            resolver: nightly
          - os: windows-latest
            resolver: lts-16
    env:
      STACK_YAML: stack.yaml
      cache-version: v1 # bump up this version to invalidate currently stored cache
    steps:
    - uses: actions/checkout@v2

    - name: Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.stack
          .stack-work
        key: ${{ runner.os }}-${{ matrix.resolver }}-${{ env.cache-version }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.resolver }}-${{ env.cache-version }}
    - name: Workaround setup-exe-cache failure on macos
      if: steps.cache.outputs.cache-hit == 'true' && matrix.os == 'macos-latest'
      run: |
        rm -r ~/.stack/setup-exe-cache
    - name: Windows Cache
      id: cache-windows
      uses: actions/cache@v2
      if: matrix.os == 'windows-latest'
      with:
        path: |
          ~/AppData/Local/Programs/stack
        key: ${{ runner.os }}-${{ matrix.resolver }}-programs-${{ env.cache-version }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.resolver }}-programs-${{ env.cache-version }}

    - name: Install Stack and GHC
      shell: bash
      run: |
        set -ex
        curl -sSL https://get.haskellstack.org/ | sh -s - -f
        curl -sSL https://gist.githubusercontent.com/lehins/fd36a8cc8bf853173437b17f6b6426ad/raw/d9ddb32cac2f0dc6800be4fa54d450f0dcda6c60/git-modtime.hs -o git-modtime.hs
        [ -n "${{ matrix.stack-yaml }}" ] && STACK_YAML=${{ matrix.stack-yaml }}
        stack --resolver ${{ matrix.resolver }} runghc git-modtime.hs
    - name: Tests
      shell: bash
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: |
        set -ex
        [ -n "${{ matrix.stack-yaml }}" ] && STACK_YAML=${{ matrix.stack-yaml }}
        if [ "${{ matrix.os }}.${{ matrix.resolver }}" == "ubuntu-latest.lts-14" ] && [ -n "${COVERALLS_TOKEN}" ]; then
          stack test random:spec random:legacy-test --coverage --haddock --no-haddock-deps
          stack hpc report --all
          curl -L https://github.com/lehins/stack-hpc-coveralls/releases/download/v0.0.6.0/shc.tar.gz | tar xz shc
          ./shc --repo-token="$COVERALLS_TOKEN" --partial-coverage --fetch-coverage combined custom
        else
          stack --resolver ${{ matrix.resolver }} test --bench --no-run-benchmarks --haddock --no-haddock-deps
        fi
